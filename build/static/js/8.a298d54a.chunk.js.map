{"version":3,"sources":["views/agents/AllAgents.js"],"names":["AllAgents","useState","loadAgent","setLoadAgent","agents","setAgents","handleDeleteCliente","id","a","Swal","fire","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","cancelButtonText","then","result","value","deleteAgent","API_BASE_URL","delete","res","data","code","loadAgents","catch","e","console","log","get","reverse","useEffect","setTimeout","length","className","scope","aria-pressed","role","to","map","agent","index","codeagent","nomagent","prenomagent","emailagent","class","idagent","onClick","src"],"mappings":"iOAiKgBA,UA7IE,WAEhB,MAAkCC,oBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KAGMC,EAAmB,uCAAG,WAAOC,GAAP,SAAAC,EAAA,sEACnBC,IAAKC,KAAK,CACfC,MAAO,kBACPC,KAAM,8CACNC,KAAM,UACNC,kBAAkB,EAClBC,mBAAoB,UACpBC,kBAAmB,OACnBC,kBAAmB,gCACpBC,iBAAkB,YAChBC,MAAK,SAACC,GACHA,EAAOC,OACTC,EAAYf,MAZU,2CAAH,sDAiBnBe,EAAW,uCAAG,WAAOf,GAAP,SAAAC,EAAA,sEACZe,IAAaC,OAAO,UAAUjB,GAAIY,MAAM,SAAAM,GACtB,MAAlBA,EAAIC,KAAKC,MACXlB,IAAKC,KACH,qBACA,wCACA,WAEFkB,KAEAnB,IAAKC,KACH,qBACA,4CACA,YAGHmB,OAAM,SAAAC,GACPC,QAAQC,IAAIF,MAjBI,2CAAH,sDAqBXF,EAAU,uCAAG,sBAAApB,EAAA,sEACXe,IAAaU,IAAI,UAAUd,MAAM,SAAAM,GACrC,IAAIC,EAAOD,EAAIC,KAAKA,KACpBK,QAAQC,IAAIN,GACZrB,EAAUqB,EAAKQ,cACdL,OAAO,SAAAC,GACRC,QAAQC,IAAIF,MANG,2CAAH,qDAgBhB,OAPAK,qBAAU,WACRC,YAAW,WACTjC,GAAa,KACZ,MACHyB,MACC,IAGD,mCAII1B,EAEI,mCAEME,EAAOiC,OAAS,EAGd,cAAC,IAAD,UACE,cAAC,IAAD,UACE,wBAAOC,UAAU,2BAAjB,UACE,uBAAOA,UAAU,aAAjB,SACA,+BACE,oBAAIC,MAAM,MAAV,eACA,oBAAIA,MAAM,MAAV,uBACA,oBAAIA,MAAM,MAAV,iBACA,oBAAIA,MAAM,MAAV,oBACA,oBAAIA,MAAM,MAAV,mBACA,mCAAK,cAAC,IAAD,CAAMD,UAAU,oBAAoBE,eAAa,OAAOC,KAAK,SAASC,GAAG,oBAAzE,mCAGP,gCACCtC,EAAOuC,KAAI,SAACC,EAAOC,GAAR,OACV,+BACE,oBAAIN,MAAM,MAAV,SAAiBM,EAAQ,IACzB,6BAAKD,EAAME,YACX,6BAAKF,EAAMG,WACX,6BAAKH,EAAMI,cACX,6BAAKJ,EAAMK,aACX,+BACE,cAAC,IAAD,CAAMC,MAAM,uBACNR,GAAE,uBAAkBE,EAAMO,SADhC,0BAIA,cAAC,IAAD,CACED,MAAM,+BACNR,GAAE,sBAAiBE,EAAMO,SAF3B,oBAMA,cAAC,IAAD,CACED,MAAM,iBACNE,QAAS,kBAAM9C,EAAoBsC,EAAMO,UAF3C,uCAeb,cAAC,IAAD,UACC,cAAC,IAAD,CAAMb,UAAU,0EAAhB,SACE,gCACE,cAAC,IAAD,CACEe,IAAK,sBACLf,UAAU,cAEZ,oBAAIA,UAAU,6BAAd,oDAOX,cAAC,IAAD,CAAMA,UAAU,mEAAhB,SACC,oBAAIA,UAAU,6BAAd","file":"static/js/8.a298d54a.chunk.js","sourcesContent":["import React, {useEffect, useState} from 'react'\r\nimport {\r\n  CBadge,\r\n  CButton,\r\n  CCard,\r\n  CCardBody, CCardFooter,\r\n  CCardHeader,\r\n  CCol, CCollapse,\r\n  CDataTable, CForm, CFormGroup, CImg, CInput, CInputGroup, CInputGroupPrepend, CInputGroupText, CLabel,\r\n  CModal,\r\n  CModalBody,\r\n  CModalFooter,\r\n  CModalHeader,\r\n  CRow, CSelect\r\n} from \"@coreui/react\";\r\nimport CIcon from \"@coreui/icons-react\";\r\nimport {API_BASE_URL} from \"../../models\";\r\nimport {Link} from \"react-router-dom\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nconst AllAgents = () => {\r\n\r\n  const [loadAgent, setLoadAgent] = useState(false);\r\n  const [agents, setAgents] = useState([]);\r\n\r\n\r\n  const handleDeleteCliente = async (id) => {\r\n     await Swal.fire({\r\n      title: 'Etes vous sure?',\r\n      text: \"Vous ne pourrez pas revenir en arrière !\",\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Oui, le retirer de la  liste!',\r\n     cancelButtonText: 'Annuler'\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        deleteAgent(id);\r\n      }\r\n    })\r\n  }\r\n\r\n  const deleteAgent = async (id) => {\r\n    await API_BASE_URL.delete(\"agents/\"+id).then( res => {\r\n      if (res.data.code === 200) {\r\n        Swal.fire(\r\n          'SUPPRESSION AGENT!',\r\n          'L\\'agent a bien été supprimé.',\r\n          'success'\r\n        )\r\n        loadAgents();\r\n      } else {\r\n        Swal.fire(\r\n          'SUPPRESSION AGENT!',\r\n          'Erreur lors de la suppression de l\\'agent.',\r\n          'error'\r\n        )\r\n      }\r\n    }).catch(e => {\r\n      console.log(e)\r\n    })\r\n  }\r\n\r\n  const loadAgents = async () => {\r\n    await API_BASE_URL.get(\"agents\").then( res => {\r\n      let data = res.data.data;\r\n      console.log(data);\r\n      setAgents(data.reverse());\r\n    }).catch( e => {\r\n      console.log(e)\r\n    })\r\n  };\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      setLoadAgent(true)\r\n    }, 1500)\r\n    loadAgents();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {/*Zones de la liste des agents*/}\r\n\r\n      {\r\n        loadAgent\r\n          ?\r\n            <>\r\n              {\r\n                  agents.length > 0\r\n                  ?\r\n                  (\r\n                    <CRow>\r\n                      <CCol>\r\n                        <table className=\"table border shadow py-4\">\r\n                          <thead className=\"thead-dark\">\r\n                          <tr>\r\n                            <th scope=\"col\">#</th>\r\n                            <th scope=\"col\">Matricule</th>\r\n                            <th scope=\"col\">Nom</th>\r\n                            <th scope=\"col\">Prenom</th>\r\n                            <th scope=\"col\">Email</th>\r\n                            <th> <Link className=\"btn btn-info mr-1\" aria-pressed=\"true\" role=\"button\" to=\"/agent/add-agents\">Nouveau agent</Link></th>\r\n                          </tr>\r\n                          </thead>\r\n                          <tbody>\r\n                          {agents.map((agent, index) => (\r\n                            <tr>\r\n                              <th scope=\"row\">{index + 1}</th>\r\n                              <td>{agent.codeagent}</td>\r\n                              <td>{agent.nomagent}</td>\r\n                              <td>{agent.prenomagent}</td>\r\n                              <td>{agent.emailagent}</td>\r\n                              <td>\r\n                                <Link class=\"btn btn-primary mr-2\"\r\n                                      to={`/agent/infos/${agent.idagent}`}>\r\n                                  Voir details\r\n                                </Link>\r\n                                <Link\r\n                                  class=\"btn btn-outline-primary mr-2\"\r\n                                  to={`/agent/edit/${agent.idagent}`}\r\n                                >\r\n                                  Editer\r\n                                </Link>\r\n                                <Link\r\n                                  class=\"btn btn-danger\"\r\n                                  onClick={() => handleDeleteCliente(agent.idagent) }\r\n                                >\r\n                                  Retirer\r\n                                </Link>\r\n                              </td>\r\n                            </tr>\r\n                          ))}\r\n                          </tbody>\r\n                        </table>\r\n                      </CCol>\r\n                    </CRow>\r\n                  )\r\n                  :\r\n                  (<CRow>\r\n                    <CCol className=\"text-center d-flex justify-content-center align-items-center d-flex m-4\">\r\n                      <div>\r\n                        <CImg\r\n                          src={'avatars/datta-1.png'}\r\n                          className=\"img-fluid\"\r\n                        />\r\n                        <h4 className=\"text-uppercase text-center\">Données indisponibles  ...</h4>\r\n                      </div>\r\n                    </CCol>\r\n                  </CRow> )\r\n              }\r\n            </>\r\n           :\r\n            (<CCol className=\"d-flex justify-content-center align-items-center text-center m-4\">\r\n              <h4 className=\"text-uppercase text-center\">Chargement en cours .....</h4>\r\n            </CCol>)\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport  default AllAgents\r\n"],"sourceRoot":""}