{"version":3,"sources":["views/pages/login/Login.js"],"names":["Login","login","useContext","AuthContext","useState","email","setEmail","password","setPassword","className","md","xs","sm","to","style","textTransform","name","value","type","placeholder","autoComplete","onChange","event","target","toLowerCase","color","onClick","toast","warn","handleLogin","width"],"mappings":"yLA0GeA,UAtFD,WAEZ,IAAOC,EAASC,qBAAWC,KAApBF,MAEP,EAA0BG,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KAWA,OACE,qBAAKC,UAAU,qDAAf,SACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAMA,UAAU,yBAAhB,SACE,cAAC,IAAD,CAAMC,GAAG,IAAIC,GAAG,KAAKC,GAAG,KAAxB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOH,UAAU,MAAjB,SACE,cAAC,IAAD,UACE,eAAC,IAAD,CAAOI,GAAG,cAAV,UACE,oBAAIC,MAAO,CAAEC,cAAe,aAA5B,8BACA,mBAAGN,UAAU,aAAb,8CACA,eAAC,IAAD,CAAaA,UAAU,OAAvB,UACE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAOO,KAAK,iBAGhB,cAAC,IAAD,CACQC,MAAOZ,EACPa,KAAK,OACLC,YAAY,QACZC,aAAa,QACbC,SAAU,SAACC,GAAD,OAAWhB,EAASgB,EAAMC,OAAON,MAAMO,qBAG3D,eAAC,IAAD,CAAaf,UAAU,OAAvB,UACE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAOO,KAAK,wBAGhB,cAAC,IAAD,CACEC,MAAOV,EACPW,KAAK,WACLC,YAAY,eACZE,SAAU,SAACC,GAAD,OAAWd,EAAYc,EAAMC,OAAON,aAGlD,cAAC,IAAD,UACE,cAAC,IAAD,CAAMN,GAAG,IAAT,SACE,cAAC,IAAD,CACEc,MAAM,UACNhB,UAAU,OACViB,QAAS,kBAnDb,SAAErB,EAAOE,GACtBF,GAAUE,EAGbN,EAAMI,EAAOE,GAFboB,IAAMC,KAAK,8BAiDwBC,CAAYxB,EAAOE,IAHpC,qCAeV,cAAC,IAAD,CAAOE,UAAU,4CAA4CK,MAAO,CAAEgB,MAAO,OAA7E,SACE,cAAC,IAAD,CAAWrB,UAAU,cAArB,SACE","file":"static/js/18.72518a23.chunk.js","sourcesContent":["import React, {useContext, useState} from 'react'\r\nimport {\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardGroup,\r\n  CCol,\r\n  CContainer,\r\n  CForm,\r\n  CInput,\r\n  CInputGroup,\r\n  CInputGroupPrepend,\r\n  CInputGroupText,\r\n  CRow\r\n} from '@coreui/react'\r\nimport CIcon from '@coreui/icons-react'\r\nimport {AuthContext} from \"../../../navigation/AuthProvider\";\r\nimport {toast} from \"react-toastify\";\r\n\r\n\r\nconst Login = () => {\r\n\r\n  const {login} = useContext(AuthContext)\r\n\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n\r\n // fonction de soumission de formulaire\r\n  const handleLogin = ( email, password) => {\r\n    if( !email && !password) {\r\n      toast.warn(\" Champs de saisie vide !!!\")\r\n    } else {\r\n      login(email, password)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"c-app c-default-layout flex-row align-items-center\">\r\n      <CContainer>\r\n        <CRow className=\"justify-content-center\">\r\n          <CCol md=\"8\" xs=\"12\" sm=\"12\" >\r\n            <CCardGroup>\r\n              <CCard className=\"p-4\">\r\n                <CCardBody>\r\n                  <CForm to=\"users/login\">\r\n                    <h1 style={{ textTransform: 'uppercase'}}>Authentification</h1>\r\n                    <p className=\"text-muted\">Connectez vous à votre compte</p>\r\n                    <CInputGroup className=\"mb-3\">\r\n                      <CInputGroupPrepend>\r\n                        <CInputGroupText>\r\n                          <CIcon name=\"cil-user\" />\r\n                        </CInputGroupText>\r\n                      </CInputGroupPrepend>\r\n                      <CInput\r\n                              value={email}\r\n                              type=\"text\"\r\n                              placeholder=\"email\"\r\n                              autoComplete=\"email\"\r\n                              onChange={(event) => setEmail(event.target.value.toLowerCase()) }\r\n                      />\r\n                    </CInputGroup>\r\n                    <CInputGroup className=\"mb-4\">\r\n                      <CInputGroupPrepend>\r\n                        <CInputGroupText>\r\n                          <CIcon name=\"cil-lock-locked\" />\r\n                        </CInputGroupText>\r\n                      </CInputGroupPrepend>\r\n                      <CInput\r\n                        value={password}\r\n                        type=\"password\"\r\n                        placeholder=\"Mot de passe\"\r\n                        onChange={(event) => setPassword(event.target.value)}\r\n                      />\r\n                    </CInputGroup>\r\n                    <CRow>\r\n                      <CCol xs=\"6\">\r\n                        <CButton\r\n                          color=\"primary\"\r\n                          className=\"px-4\"\r\n                          onClick={() => handleLogin(email, password)}\r\n                        >\r\n                          Se connecter\r\n                        </CButton>\r\n                      </CCol>\r\n                    {/*  <CCol xs=\"6\" className=\"text-right\">\r\n                        <CButton color=\"link\" className=\"px-0\">Resté connecter</CButton>\r\n                      </CCol>*/}\r\n                    </CRow>\r\n                  </CForm>\r\n                </CCardBody>\r\n              </CCard>\r\n              <CCard className=\"text-white bg-primary py-5 d-md-down-none\" style={{ width: '44%' }}>\r\n                <CCardBody className=\"text-center\">\r\n                  <div>\r\n\r\n                  </div>\r\n                </CCardBody>\r\n              </CCard>\r\n            </CCardGroup>\r\n          </CCol>\r\n        </CRow>\r\n      </CContainer>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Login\r\n"],"sourceRoot":""}