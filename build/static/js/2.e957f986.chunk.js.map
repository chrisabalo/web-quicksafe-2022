{"version":3,"sources":["views/maps-accidents/MapsAccident.js"],"names":["Maps","id","useParams","useState","lat","setLat","lng","setLng","position","setPosition","GET_LAT_LNG","a","API_BASE_URL","get","then","res","data","console","log","lataccident","longaccident","datas","name","region","rue","ville","dates","dateaccident","useEffect","e","className","to","MapContainer","center","zoom","scrollWheelZoom","style","height","zoomControl","TileLayer","attribution","url","Marker","Popup","Circle","radius","pathOptions","color","moment","format","fromNow"],"mappings":"2QA4JiBA,UAnJJ,WAEX,IAAOC,EAAMC,cAAND,GAEP,EAAqBE,mBAAS,YAA9B,mBAAMC,EAAN,KAAWC,EAAX,KACA,EAAqBF,mBAAS,YAA9B,mBAAMG,EAAN,KAAWC,EAAX,KACA,EAA+BJ,mBAAS,IAAxC,mBAAMK,EAAN,KAAgBC,EAAhB,KAEMC,EAAW,uCAAG,sBAAAC,EAAA,+EAEVC,IAAaC,IAAb,+BAAyCZ,IAAMa,MAAM,SAAAC,GACzD,IAAIC,EAAOD,EAAIC,KAAKA,KACpBC,QAAQC,IAAI,gBAAiBF,GAC7BX,EAAOW,EAAKG,aACZZ,EAAOS,EAAKI,cAEZX,EAAYO,MARE,sDAWhBC,QAAQC,IAAR,MAXgB,wDAAH,qDA8DjBD,QAAQC,IAAI,WAAYV,GACxB,IAAMa,EAAQb,EAERc,GADOD,EAAMD,aACNC,EAAMC,MACbC,EAASF,EAAME,OACfC,EAAMH,EAAMG,IACZC,EAAQJ,EAAMI,MAEdC,GADOL,EAAMF,YACLE,EAAMM,cAapB,OAZAV,QAAQC,IAAI,QAASQ,GAErBE,qBAAU,WACR,IAEE,OADoBlB,IAErB,MAAOmB,GACNZ,QAAQC,IAAIW,MAEb,IAYE,aARA,CAQC,IAAD,UACE,cAAC,IAAD,UACC,eAAC,IAAD,WACE,eAAC,IAAD,CAAaC,UAAU,+BAAvB,UACE,cAAC,IAAD,CAASC,GAAG,2BAA2BD,UAAU,2CAAjD,eADF,IAC4G,GAD5G,2BAIA,cAAC,IAAD,UACE,cAAC,IAAD,UACE,eAACE,EAAA,EAAD,CAAeC,OAAQ,CAAC7B,EAAKE,GAAM4B,KAAM,GAAIC,iBAAiB,EAC/CC,MAAO,CAAEC,OAAQ,QACjBC,aAAa,EAF5B,UAKE,cAACC,EAAA,EAAD,CACEC,YAAY,yEACZC,IAAI,uDAEN,cAACC,EAAA,EAAD,CAAQlC,SAAU,CAACJ,EAAKE,GAAxB,SACE,eAACqC,EAAA,EAAD,yBACcvC,EADd,IACmB,uBADnB,gBACuCE,EADvC,IAC4C,uBAD5C,YAEYiB,EAFZ,IAEoB,uBAFpB,YAEoCE,EAFpC,IAE2C,uBAF3C,cAGuB,SAATH,EAAkBA,EAAO,WAHvC,IAGmD,uBAHnD,SAIiB,SAARE,EAAiBA,EAAM,WAJhC,KAI6C,4BAG/C,cAACoB,EAAA,EAAD,CAASX,OAAQ,CAAC7B,EAAKE,GAAMuC,OAAQ,IAAKC,YAAa,CAAEC,MAAO,gBAItE,cAAC,IAAD,CAAajB,UAAU,6CAAvB,SACE,sBAAKA,UAAU,2BAAf,gDAC+B,uBAAMA,UAAU,+BAAhB,cAAkDkB,IAAO,GAAD,OAAItB,IAASuB,OAAO,QAA5E,IAAsF,GACjHD,IAAO,GAAD,OAAItB,IAASuB,OAAO,gBADC,IACiB,GADjB,IACsB,SACjDD,IAAO,GAAD,OAAItB,IAASuB,OAAO,YAFC,OAD/B,IAIC,uBAAMnB,UAAU,YAAhB,cAA0C,OAAVL,EAAiB,mCAAoCA,EAAU,yBAC5F,GADH,KACQ,sBAAMK,UAAU,mBAAhB,SAAqCkB,IAAO,GAAD,OAAItB,IAASwB,YADhE,OAEC,sBAAMpB,UAAU,iBAAhB,SAAkC,mBAAGA,UAAU,sBANjD,IAMiF,GAC/E,sBAAMA,UAAU,YAAhB,SAA6B,mBAAGA,UAAU","file":"static/js/2.e957f986.chunk.js","sourcesContent":["import React, {useEffect, useState} from 'react'\r\nimport {useParams} from \"react-router\";\r\nimport {CButton, CCard, CCardBody, CCardFooter, CCardHeader, CCol, CContainer, CRow} from \"@coreui/react\";\r\nimport Mapquest from \"./Mapquest\";\r\nimport {API_BASE_URL} from \"../../models\";\r\nimport {Circle, MapContainer, Marker, Popup, TileLayer,} from \"react-leaflet\";\r\nimport moment from \"moment\";\r\n\r\n\r\nconst Maps = () => {\r\n\r\n  const {id} = useParams();\r\n // alert(id);\r\n  const[lat, setLat] = useState('6.158303') //6.1583036315448485, 1.2600531999999998\r\n  const[lng, setLng] = useState('1.260053')\r\n  const[position, setPosition] = useState([])\r\n\r\n  const GET_LAT_LNG = async () => {\r\n    try {\r\n      await API_BASE_URL.get(`accidents/idaccident/${id}`).then( res => {\r\n        let data = res.data.data;\r\n        console.log(\"only accident\", data)\r\n        setLat(data.lataccident)\r\n        setLng(data.longaccident)\r\n        //alert(JSON.stringify(data))\r\n        setPosition(data);\r\n      })\r\n    }catch (e) {\r\n      console.log(e)\r\n    }\r\n  }\r\n\r\n /* const SET_CENTER = (lat, lng) => {\r\n    setLat(lat)\r\n    setLng(lng)\r\n    window.L.mapquest.Map.getMap('map').setView(new window.L.LatLng(lat,lng), 12);\r\n  }\r\n  let markers = [];\r\n  const ADD_MARKER = (lat, lng, title, subtitle) => {\r\n    const marker = window.L.mapquest.textMarker(\r\n      new window.L.LatLng(lat, lng),\r\n      {\r\n        text: title || '',\r\n        subtext: subtitle || '',\r\n        position: 'top' || '',\r\n        type: 'marker',\r\n        icon: {\r\n          primaryColor: '#a8190f',\r\n          secondaryColor: '#db2c2c',\r\n          size: 'md',\r\n        }\r\n      }\r\n    )\r\n      .addTo(window.L.mapquest.Map.getMap('map'));\r\n    markers.push(marker);\r\n\r\n  }\r\n*/\r\n  /*const LOAD_ASYNC = async () => {\r\n    console.log(\"Position\", position)\r\n    const data = position\r\n    const long = data.longaccident\r\n    const name = data.name\r\n    const region = data.region\r\n    const rue = data.rue\r\n    const ville = data.ville\r\n    const latt = data.lataccident\r\n    console.log(\"Long\", long, latt)\r\n    try {\r\n      await GET_LAT_LNG();\r\n      SET_CENTER(latt,long);\r\n      {\r\n        (latt && long) !== null && ADD_MARKER(latt, long, `${region}`, `Ville: ${ville}, Rue: ${rue}`);\r\n      }\r\n    }catch (e) {\r\n      console.log(e)\r\n    }\r\n  }\r\n*/\r\n  console.log(\"Position\", position)\r\n  const datas = position\r\n  const long = datas.longaccident\r\n  const name = datas.name\r\n  const region = datas.region\r\n  const rue = datas.rue\r\n  const ville = datas.ville\r\n  const latt = datas.lataccident\r\n  const dates = datas.dateaccident\r\n  console.log(\"Dates\", dates)\r\n // alert(lat)\r\n  useEffect(() => {\r\n    try {\r\n      const unsubscribe = GET_LAT_LNG();\r\n      return unsubscribe;\r\n    }catch (e) {\r\n      console.log(e)\r\n    }\r\n  }, [])\r\n\r\n\r\n  return (\r\n       /* <Mapquest\r\n          height=\"61vh\"\r\n          width=\"100%\"\r\n          center={[lat, lng]}\r\n          tileLyer={\"dark\"}\r\n          zoom={12}\r\n          apiKey=\"YncVxAJgAtsvImF2CUysPiM7pQ8SwYDp\"\r\n        />*/\r\n       <CContainer>\r\n         <CRow>\r\n          <CCard>\r\n            <CCardHeader className=\"text-uppercase text-black-50\" >\r\n              <CButton to=\"/alertes/alertes-receipt\" className=\"fa fa-angle-double-left btn-outline-dark\" > </CButton> {\"\"}\r\n              la zone de l'accident\r\n            </CCardHeader>\r\n            <CCardBody>\r\n              <CCol>\r\n                <MapContainer  center={[lat, lng]} zoom={13} scrollWheelZoom={false}\r\n                               style={{ height: \"60vh\" }}\r\n                               zoomControl={true}\r\n\r\n                >\r\n                  <TileLayer\r\n                    attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n                    url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                  />\r\n                  <Marker position={[lat, lng]}>\r\n                    <Popup>\r\n                      latitude : {lat} <br /> longitude : {lng}.<br />\r\n                      Region : {region} <br /> Ville : {ville}.<br />\r\n                      Quartier : {name !== 'null' ? name : 'Inconnue'}.<br />\r\n                      Rue : {rue !== 'null' ? rue : 'Inconnue'} .<br />\r\n                    </Popup>\r\n                  </Marker>\r\n                  <Circle  center={[lat, lng]} radius={200} pathOptions={{ color: 'red' }} />\r\n                </MapContainer>\r\n              </CCol>\r\n            </CCardBody>\r\n            <CCardFooter className=\"align-items-center justify-content-between\">\r\n              <div className=\"text-muted text-truncate\">\r\n                L'accident a été signaler le <span className=\"text-dark font-weight-bolder\"> { moment(`${dates}`).format('dddd')} {\"\"}\r\n                { moment(`${dates}`).format('Do MMMM YYYY')} {\"\"} {\" à \"}\r\n                { moment(`${dates}`).format('HH:mm:ss')} </span>,\r\n               <span className=\"text-dark\" > { ville !== null ? 'dans les environ de la ville de '+ ville   : 'Ville : Nom disponible' }\r\n                 {\"\"}  <span className=\"font-weight-bold\" >{moment(`${dates}`).fromNow()}</span> </span>\r\n                <span className=\"float-end ml-1\" ><i className=\"fa fa-share-alt\" ></i></span> {\"\"}\r\n                <span className=\"float-end\" ><i className=\"fa fa-whatsapp \" ></i></span>\r\n              </div>\r\n            </CCardFooter>\r\n          </CCard>\r\n         </CRow>\r\n       </CContainer>\r\n  );\r\n}\r\n\r\nexport  default  Maps\r\n\r\n\r\n"],"sourceRoot":""}